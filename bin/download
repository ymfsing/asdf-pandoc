#!/usr/bin/env bash

set -euo pipefail

current_script_path=${BASH_SOURCE[0]}
plugin_dir=$(dirname "$(dirname "$current_script_path")")

# shellcheck source=../lib/utils.bash
source "${plugin_dir}/lib/utils.bash"

mkdir -p "$ASDF_DOWNLOAD_PATH"

architecture=
case "$(uname -m)" in
x86_64 | x86-64 | x64 | amd64) architecture="amd64" ;;
aarch64 | arm64) architecture="arm64" ;;
esac

osname=
case "$OSTYPE" in
darwin*) osname="macOS" ;;
linux*) osname="linux" ;;
*) fail "Unsupported operating system" ;;
esac

filenameSuffix=
case "$osname-$architecture" in
macOS-amd64) filenameSuffix="x86_64-macOS.zip" ;;
macOS-arm64) filenameSuffix="arm64-macOS.zip" ;;
linux-amd64) filenameSuffix="linux-amd64.tar.gz" ;;
linux-arm64) filenameSuffix="linux-arm64.tar.gz" ;;
# windows-amd64) filenameSuffix="windows-x64_64.zip" ;;
*) fail "Unsupported platform" ;;
esac

filename=pandoc-$ASDF_INSTALL_VERSION-$filenameSuffix
url="$GH_REPO/releases/download/$ASDF_INSTALL_VERSION/$filename"

release_file=$ASDF_DOWNLOAD_PATH/$filename

echo "* Downloading $TOOL_NAME release $ASDF_INSTALL_VERSION..."
curl "${curl_opts[@]}" -o "$release_file" -C - "$url" || fail "Could not download $url"

#  Extract contents of tar.gz file into the download directory
case "$release_file" in
    *.tar.gz) tar -xzf "$release_file" -C "$ASDF_DOWNLOAD_PATH" || fail "Could not extract $release_file" ;;
    *.zip) unzip -q "$release_file" -d "$ASDF_DOWNLOAD_PATH" || fail "Could not extract $release_file" ;;
esac

# Remove the tar.gz file since we don't need to keep it
rm "$release_file"

# Correct extract_folder name
extract_temp=$ASDF_DOWNLOAD_PATH/*
extract_folder=$ASDF_DOWNLOAD_PATH/pandoc-$ASDF_INSTALL_VERSION

mv "$extract_temp" "$extract_folder"
